1. The Stack data structure arranges elements in LIFO priority and Queue data structure arranges elements in FIFO priority.

2. Both of them handle the data flow. Queues are more common.

3. 3. To implement the UNDO and REDO options in a word processor, I would use the Stack data structure because both UNDO and REDO applies to the very last amongst all actions either popping or pushing the commands onto either stack.

Programming Questions

1.
function reverse(originalStr) {
  var strArray = originalStr.split("");
  var reverseArray = [];
  for (var i=strArray.length-1; i>=0; i--) {
    reverseArray.push(strArray[i]);
  }
  return reverseArray.join("");
}

2.
FUNCTION pop
  SET temp to the last element
  REMOVE LAST element of list from list
  RETURN temp
END function

function pop() {
  let temp = list.splice(list.length-1, 1);
  return temp;
}

1.
class Queue {
  constructor () {
    arr = new Array();
  }

  function enqueue (element) {
    this.arr.push(element);
  }

  function dequeue {
    let temp = this.arr[0];
    this.arr.shift();
    return temp;
  }
}